name: Chart build

on:
  workflow_dispatch: {}
  pull_request:
    branches:
      - develop

jobs:
  build-with-cost-model-develop:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.3

      - name: Run helm lint
        working-directory: ./cost-analyzer
        run: helm lint

      - name: Run helm template
        working-directory: ./cost-analyzer
        # Template the chart out for kubeval usage and also validates that it can 'build'
        run: helm template . --set global.prometheus.enabled=false --set global.grafana.enabled=false > full.yaml

      # - name: Kubeval test
      #   uses: instrumenta/kubeval-action@master
      #   with:
      #     files: ./cost-analyzer/full.yaml
      #     ignore_missing_schemas: false

      - name: Kubeconform test
        uses: docker://ghcr.io/yannh/kubeconform:latest
        with:
          entrypoint: '/kubeconform'
          args: "-summary -output text ./cost-analyzer/full.yaml"

      # Setup a short sha to use for cluster naming to ensure we create and cleanup unique clusters and set the k8s version for
      # both kubectl and k3s
      - name: Setup env
        run: |
          echo "short_sha=${GITHUB_SHA::10}" >> $GITHUB_ENV
          echo "k8s_version=v1.23.7" >> $GITHUB_ENV

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: ${{ env.k8s_version }}

      - name: Create k3d cluster
        uses: AbsaOSS/k3d-action@v2
        with:
          cluster-name: ${{ env.short_sha }}
          args: >-
            --agents 1
            --no-lb
            --image docker.io/rancher/k3s:${{ env.k8s_version }}-k3s1
            --k3s-arg "--no-deploy=traefik,servicelb,metrics-server@server:*"

      - name: Install Kubecost
        working-directory: ./cost-analyzer
        run: |
          kubectl create ns kubecost
          helm install kubecost . --namespace kubecost --set global.prometheus.enabled=false --set global.grafana.enabled=false
